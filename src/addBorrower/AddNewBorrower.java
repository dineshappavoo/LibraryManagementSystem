package addBorrower;

/**
 * 
 * author: Dinesh Appavoo
 */

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;

import util.AlertUtil;
import util.DisplayUtil;
import util.GUIConstants;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

@SuppressWarnings("serial")
public class AddNewBorrower extends JPanel {

    public JLabel borrowerfName;
    public JLabel borrowerSName;
    public JLabel sAddress;
    public JLabel sPhone;
    public JTextField sPhoneText;
    public JTextField borrowerfNameText;
    public JTextField borrowerSNameText;
    public JTextField sAddressText;
    public JButton addBorrower;
    
    public JLabel infoLabel;
    public JLabel logoLabel;

    public JLabel cardNo;
    public JLabel carNoDisp;
    String cardNoDisplay="";
    
    String fName="", sName="", sAddressVal="";


    public AddNewBorrower() {

        /*super("LIBRARY MANAGEMENT SYSTEM");
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setDefaultCloseOperation(EXIT_ON_CLOSE);   
        setSize(800, 620);
        setMinimumSize(new Dimension(800, 620));*/

    	
    	infoLabel=DisplayUtil.addInfoLabel("Tool Tip : Add borrower section helps to add a new borrower " +
    			"to the library system. Every borrower will have an unique" +
    			" borrower ID. This borrower ID will be generated by the system");
    	
    	logoLabel=new JLabel();
    	ImageIcon imgThisImg = new ImageIcon("/users/dany/downloads/logo.jpeg");

    	logoLabel.setIcon(imgThisImg);
    	//logoLabel.setBounds(350, 80, 100, 40);
    	//validate();

    	
/*    	java.net.URL urlToImage = this.getClass().getResource("/images/logo.jpeg");
    	ImageIcon icon = new ImageIcon(urlToImage);
    	logoLabel=new JLabel(icon);
    	logoLabel.setBounds(450, 80, 100, 40);*/
    	

    	
    	borrowerfName = new JLabel("First Name :");
    	borrowerfName.setBounds(GUIConstants._XPOS_LEFT, GUIConstants._YPOS, 100, 20);
    	borrowerfNameText = new JTextField(20);
    	borrowerfNameText.setBounds(GUIConstants._XPOS_RIGHT, GUIConstants._YPOS, 200, 20);

    	borrowerSName = new JLabel("Second Name :");
    	borrowerSName.setBounds(GUIConstants._XPOS_LEFT, GUIConstants._YPOS+30, 100, 20);
    	borrowerSNameText = new JTextField(20);
    	borrowerSNameText.setBounds(GUIConstants._XPOS_RIGHT, GUIConstants._YPOS+30, 200, 20);

    	sAddress = new JLabel("Address :");
    	sAddress.setBounds(GUIConstants._XPOS_LEFT, GUIConstants._YPOS+60, 100, 20);
    	sAddressText = new JTextField(20);
    	sAddressText.setBounds(GUIConstants._XPOS_RIGHT, GUIConstants._YPOS+60, 200, 20);
    	
    	sPhone = new JLabel("Phone :");
    	sPhone.setBounds(GUIConstants._XPOS_LEFT, GUIConstants._YPOS+90, 100, 20);
    	sPhoneText = new JTextField(20);
    	sPhoneText.setBounds(GUIConstants._XPOS_RIGHT, GUIConstants._YPOS+90, 200, 20);
    	
    	cardNo = new JLabel("Your Card No :");
    	cardNo.setBounds(GUIConstants._XPOS_LEFT, GUIConstants._YPOS+120, 100, 20);
    	carNoDisp = new JLabel("");
    	carNoDisp.setBounds(GUIConstants._XPOS_RIGHT, GUIConstants._YPOS+120, 400, 20);



    	addBorrower = new JButton("Add Borrower");
    	addBorrower.setBounds(GUIConstants._XPOS_LEFT+30, GUIConstants._YPOS+150, 100, 20);

        addBorrower.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
            	
            	fName=borrowerfNameText.getText();
            	sName=borrowerSNameText.getText();
            	sAddressVal=sAddressText.getText();
            	
            	if(fName.equals("")||sName.equals("")||sAddressVal.equals(""))
            	{
            	if(fName.equals(""))
            	{
            		AlertUtil.msgbox("Please enter your first name");
            		borrowerfNameText.requestFocusInWindow();
            	}else if(sName.equals(""))
            	{
            		AlertUtil.msgbox("Please enter your second name");
            		borrowerSNameText.requestFocusInWindow();
            	}else if(sAddressVal.equals(""))
            	{
            		AlertUtil.msgbox("Please enter your address");
            		sAddressText.requestFocusInWindow();
            	}
            	
            	}else
            	{
            	
            	BorrowerBean borrowerBean = new BorrowerBean();
            	borrowerBean.setfName(fName);
            	borrowerBean.setlName(sName);
            	borrowerBean.setsAddress(sAddressVal);
            	borrowerBean.setsPhone(sPhoneText.getText());
                try {
                    String res=new BorrowerAddition().addBorrower(borrowerBean);
                    if(res.contains("Exists"))
                    {
                    	cardNoDisplay = "The borrower ID already "+res;
                    	carNoDisp.setText(cardNoDisplay);
                    }else
                    {
                    	carNoDisp.setText(res);
                    }
                } catch (Exception e1) {
                    e1.printStackTrace();
                }
            }
            }
        });
        setLayout(null);

        add(infoLabel);
        add(logoLabel);
        validate();
        add(borrowerfName);
        add(borrowerfNameText);
        add(borrowerSName);
        add(borrowerSNameText);
        add(sAddress);
        add(sAddressText);
        add(sPhone);
        add(sPhoneText);
        add(cardNo);
        add(carNoDisp);
        add(addBorrower);

        setVisible(true);
    }

    public static void main(String args[]) {
        new AddNewBorrower();
    }
}
